
#include "FluidSimulator.h"
#include <cstdlib>
#include <unordered_map>
#include <variant>
#include <string>
#include <iostream>
#include <vector>

void replaceBrackets(std::string& input) {
    for (char& c : input) {
        if (c == '(') c = '<';
        else if (c == ')') c = '>';
    }
}

using FluidSimulatorVariant = std::variant<FluidSimulator<float, float, float>, FluidSimulator<float, float, FAST_FIXED<13,7>>, FluidSimulator<float, float, FIXED<64,15>>, FluidSimulator<float, float, double>, FluidSimulator<float, FAST_FIXED<13,7>, float>, FluidSimulator<float, FAST_FIXED<13,7>, FAST_FIXED<13,7>>, FluidSimulator<float, FAST_FIXED<13,7>, FIXED<64,15>>, FluidSimulator<float, FAST_FIXED<13,7>, double>, FluidSimulator<float, FIXED<64,15>, float>, FluidSimulator<float, FIXED<64,15>, FAST_FIXED<13,7>>, FluidSimulator<float, FIXED<64,15>, FIXED<64,15>>, FluidSimulator<float, FIXED<64,15>, double>, FluidSimulator<float, double, float>, FluidSimulator<float, double, FAST_FIXED<13,7>>, FluidSimulator<float, double, FIXED<64,15>>, FluidSimulator<float, double, double>, FluidSimulator<FAST_FIXED<13,7>, float, float>, FluidSimulator<FAST_FIXED<13,7>, float, FAST_FIXED<13,7>>, FluidSimulator<FAST_FIXED<13,7>, float, FIXED<64,15>>, FluidSimulator<FAST_FIXED<13,7>, float, double>, FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, float>, FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, FAST_FIXED<13,7>>, FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, FIXED<64,15>>, FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, double>, FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, float>, FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, FAST_FIXED<13,7>>, FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, FIXED<64,15>>, FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, double>, FluidSimulator<FAST_FIXED<13,7>, double, float>, FluidSimulator<FAST_FIXED<13,7>, double, FAST_FIXED<13,7>>, FluidSimulator<FAST_FIXED<13,7>, double, FIXED<64,15>>, FluidSimulator<FAST_FIXED<13,7>, double, double>, FluidSimulator<FIXED<64,15>, float, float>, FluidSimulator<FIXED<64,15>, float, FAST_FIXED<13,7>>, FluidSimulator<FIXED<64,15>, float, FIXED<64,15>>, FluidSimulator<FIXED<64,15>, float, double>, FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, float>, FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, FAST_FIXED<13,7>>, FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, FIXED<64,15>>, FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, double>, FluidSimulator<FIXED<64,15>, FIXED<64,15>, float>, FluidSimulator<FIXED<64,15>, FIXED<64,15>, FAST_FIXED<13,7>>, FluidSimulator<FIXED<64,15>, FIXED<64,15>, FIXED<64,15>>, FluidSimulator<FIXED<64,15>, FIXED<64,15>, double>, FluidSimulator<FIXED<64,15>, double, float>, FluidSimulator<FIXED<64,15>, double, FAST_FIXED<13,7>>, FluidSimulator<FIXED<64,15>, double, FIXED<64,15>>, FluidSimulator<FIXED<64,15>, double, double>, FluidSimulator<double, float, float>, FluidSimulator<double, float, FAST_FIXED<13,7>>, FluidSimulator<double, float, FIXED<64,15>>, FluidSimulator<double, float, double>, FluidSimulator<double, FAST_FIXED<13,7>, float>, FluidSimulator<double, FAST_FIXED<13,7>, FAST_FIXED<13,7>>, FluidSimulator<double, FAST_FIXED<13,7>, FIXED<64,15>>, FluidSimulator<double, FAST_FIXED<13,7>, double>, FluidSimulator<double, FIXED<64,15>, float>, FluidSimulator<double, FIXED<64,15>, FAST_FIXED<13,7>>, FluidSimulator<double, FIXED<64,15>, FIXED<64,15>>, FluidSimulator<double, FIXED<64,15>, double>, FluidSimulator<double, double, float>, FluidSimulator<double, double, FAST_FIXED<13,7>>, FluidSimulator<double, double, FIXED<64,15>>, FluidSimulator<double, double, double>>;

int main(int argc, char* argv[]) {
    std::unordered_map<std::string, int> params = { {"float, float, float", 0}, {"float, float, FAST_FIXED<13,7>", 1}, {"float, float, FIXED<64,15>", 2}, {"float, float, double", 3}, {"float, FAST_FIXED<13,7>, float", 4}, {"float, FAST_FIXED<13,7>, FAST_FIXED<13,7>", 5}, {"float, FAST_FIXED<13,7>, FIXED<64,15>", 6}, {"float, FAST_FIXED<13,7>, double", 7}, {"float, FIXED<64,15>, float", 8}, {"float, FIXED<64,15>, FAST_FIXED<13,7>", 9}, {"float, FIXED<64,15>, FIXED<64,15>", 10}, {"float, FIXED<64,15>, double", 11}, {"float, double, float", 12}, {"float, double, FAST_FIXED<13,7>", 13}, {"float, double, FIXED<64,15>", 14}, {"float, double, double", 15}, {"FAST_FIXED<13,7>, float, float", 16}, {"FAST_FIXED<13,7>, float, FAST_FIXED<13,7>", 17}, {"FAST_FIXED<13,7>, float, FIXED<64,15>", 18}, {"FAST_FIXED<13,7>, float, double", 19}, {"FAST_FIXED<13,7>, FAST_FIXED<13,7>, float", 20}, {"FAST_FIXED<13,7>, FAST_FIXED<13,7>, FAST_FIXED<13,7>", 21}, {"FAST_FIXED<13,7>, FAST_FIXED<13,7>, FIXED<64,15>", 22}, {"FAST_FIXED<13,7>, FAST_FIXED<13,7>, double", 23}, {"FAST_FIXED<13,7>, FIXED<64,15>, float", 24}, {"FAST_FIXED<13,7>, FIXED<64,15>, FAST_FIXED<13,7>", 25}, {"FAST_FIXED<13,7>, FIXED<64,15>, FIXED<64,15>", 26}, {"FAST_FIXED<13,7>, FIXED<64,15>, double", 27}, {"FAST_FIXED<13,7>, double, float", 28}, {"FAST_FIXED<13,7>, double, FAST_FIXED<13,7>", 29}, {"FAST_FIXED<13,7>, double, FIXED<64,15>", 30}, {"FAST_FIXED<13,7>, double, double", 31}, {"FIXED<64,15>, float, float", 32}, {"FIXED<64,15>, float, FAST_FIXED<13,7>", 33}, {"FIXED<64,15>, float, FIXED<64,15>", 34}, {"FIXED<64,15>, float, double", 35}, {"FIXED<64,15>, FAST_FIXED<13,7>, float", 36}, {"FIXED<64,15>, FAST_FIXED<13,7>, FAST_FIXED<13,7>", 37}, {"FIXED<64,15>, FAST_FIXED<13,7>, FIXED<64,15>", 38}, {"FIXED<64,15>, FAST_FIXED<13,7>, double", 39}, {"FIXED<64,15>, FIXED<64,15>, float", 40}, {"FIXED<64,15>, FIXED<64,15>, FAST_FIXED<13,7>", 41}, {"FIXED<64,15>, FIXED<64,15>, FIXED<64,15>", 42}, {"FIXED<64,15>, FIXED<64,15>, double", 43}, {"FIXED<64,15>, double, float", 44}, {"FIXED<64,15>, double, FAST_FIXED<13,7>", 45}, {"FIXED<64,15>, double, FIXED<64,15>", 46}, {"FIXED<64,15>, double, double", 47}, {"double, float, float", 48}, {"double, float, FAST_FIXED<13,7>", 49}, {"double, float, FIXED<64,15>", 50}, {"double, float, double", 51}, {"double, FAST_FIXED<13,7>, float", 52}, {"double, FAST_FIXED<13,7>, FAST_FIXED<13,7>", 53}, {"double, FAST_FIXED<13,7>, FIXED<64,15>", 54}, {"double, FAST_FIXED<13,7>, double", 55}, {"double, FIXED<64,15>, float", 56}, {"double, FIXED<64,15>, FAST_FIXED<13,7>", 57}, {"double, FIXED<64,15>, FIXED<64,15>", 58}, {"double, FIXED<64,15>, double", 59}, {"double, double, float", 60}, {"double, double, FAST_FIXED<13,7>", 61}, {"double, double, FIXED<64,15>", 62}, {"double, double, double", 63} };
    std::vector<FluidSimulatorVariant> arr = { FluidSimulator<float, float, float>(), FluidSimulator<float, float, FAST_FIXED<13,7>>(), FluidSimulator<float, float, FIXED<64,15>>(), FluidSimulator<float, float, double>(), FluidSimulator<float, FAST_FIXED<13,7>, float>(), FluidSimulator<float, FAST_FIXED<13,7>, FAST_FIXED<13,7>>(), FluidSimulator<float, FAST_FIXED<13,7>, FIXED<64,15>>(), FluidSimulator<float, FAST_FIXED<13,7>, double>(), FluidSimulator<float, FIXED<64,15>, float>(), FluidSimulator<float, FIXED<64,15>, FAST_FIXED<13,7>>(), FluidSimulator<float, FIXED<64,15>, FIXED<64,15>>(), FluidSimulator<float, FIXED<64,15>, double>(), FluidSimulator<float, double, float>(), FluidSimulator<float, double, FAST_FIXED<13,7>>(), FluidSimulator<float, double, FIXED<64,15>>(), FluidSimulator<float, double, double>(), FluidSimulator<FAST_FIXED<13,7>, float, float>(), FluidSimulator<FAST_FIXED<13,7>, float, FAST_FIXED<13,7>>(), FluidSimulator<FAST_FIXED<13,7>, float, FIXED<64,15>>(), FluidSimulator<FAST_FIXED<13,7>, float, double>(), FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, float>(), FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, FAST_FIXED<13,7>>(), FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, FIXED<64,15>>(), FluidSimulator<FAST_FIXED<13,7>, FAST_FIXED<13,7>, double>(), FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, float>(), FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, FAST_FIXED<13,7>>(), FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, FIXED<64,15>>(), FluidSimulator<FAST_FIXED<13,7>, FIXED<64,15>, double>(), FluidSimulator<FAST_FIXED<13,7>, double, float>(), FluidSimulator<FAST_FIXED<13,7>, double, FAST_FIXED<13,7>>(), FluidSimulator<FAST_FIXED<13,7>, double, FIXED<64,15>>(), FluidSimulator<FAST_FIXED<13,7>, double, double>(), FluidSimulator<FIXED<64,15>, float, float>(), FluidSimulator<FIXED<64,15>, float, FAST_FIXED<13,7>>(), FluidSimulator<FIXED<64,15>, float, FIXED<64,15>>(), FluidSimulator<FIXED<64,15>, float, double>(), FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, float>(), FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, FAST_FIXED<13,7>>(), FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, FIXED<64,15>>(), FluidSimulator<FIXED<64,15>, FAST_FIXED<13,7>, double>(), FluidSimulator<FIXED<64,15>, FIXED<64,15>, float>(), FluidSimulator<FIXED<64,15>, FIXED<64,15>, FAST_FIXED<13,7>>(), FluidSimulator<FIXED<64,15>, FIXED<64,15>, FIXED<64,15>>(), FluidSimulator<FIXED<64,15>, FIXED<64,15>, double>(), FluidSimulator<FIXED<64,15>, double, float>(), FluidSimulator<FIXED<64,15>, double, FAST_FIXED<13,7>>(), FluidSimulator<FIXED<64,15>, double, FIXED<64,15>>(), FluidSimulator<FIXED<64,15>, double, double>(), FluidSimulator<double, float, float>(), FluidSimulator<double, float, FAST_FIXED<13,7>>(), FluidSimulator<double, float, FIXED<64,15>>(), FluidSimulator<double, float, double>(), FluidSimulator<double, FAST_FIXED<13,7>, float>(), FluidSimulator<double, FAST_FIXED<13,7>, FAST_FIXED<13,7>>(), FluidSimulator<double, FAST_FIXED<13,7>, FIXED<64,15>>(), FluidSimulator<double, FAST_FIXED<13,7>, double>(), FluidSimulator<double, FIXED<64,15>, float>(), FluidSimulator<double, FIXED<64,15>, FAST_FIXED<13,7>>(), FluidSimulator<double, FIXED<64,15>, FIXED<64,15>>(), FluidSimulator<double, FIXED<64,15>, double>(), FluidSimulator<double, double, float>(), FluidSimulator<double, double, FAST_FIXED<13,7>>(), FluidSimulator<double, double, FIXED<64,15>>(), FluidSimulator<double, double, double>() };

    std::string p_type, v_type, v_flow_type;

    for (int i = 1; i < argc; ++i) {
        std::string arg = argv[i];
        if (arg.find("--p-type=") == 0) p_type = arg.substr(9);
        else if (arg.find("--v-type=") == 0) v_type = arg.substr(9);
        else if (arg.find("--v-flow-type=") == 0) v_flow_type = arg.substr(14);
    }

    std::string args_str = p_type + " " + v_type + " " + v_flow_type;
    replaceBrackets(args_str);

    auto it = params.find(args_str);
    if (it == params.end()) {
        std::cout << "No suitable params" << std::endl;
        return 1;
    }

    size_t T = 2500;
    size_t tick_for_save = 50;
    std::string input_file = "../input.json";
    std::visit([&](auto& simulator) { 
        simulator.runSimulation(T, tick_for_save, input_file); 
    }, arr[it->second]);
    return 0;
}
